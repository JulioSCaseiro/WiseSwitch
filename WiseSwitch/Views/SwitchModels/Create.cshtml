@model WiseSwitch.Data.Entities.SwitchModel

@{
    ViewData["Title"] = "New switch model";
}

<h2><partial name="_GoBackFaIcon" /> New Switch Model</h2>
<hr />

<div class="row">
    <div class="col-md-4">
        <form asp-action="Create">

            @* ModelState Errors *@
            <div asp-validation-summary="ModelOnly" class="text-danger"></div>

            <!-- Brand -->
            <div class="mb-3">
                <label class="form-label">BrandId</label>
                <input type="search" value="@(ViewBag.BrandId == 0 ? "" : ViewBag.BrandId)" list="brands" class="form-control" id="brandId" onchange="getProductLines()" placeholder="Enter Brand" />
                <datalist id="brands">
                    @if (ViewBag.ComboBrands != null)
                        foreach (var item in ViewBag.ComboBrands)
                        {
                            <option value="@item.Value">@item.Text</option>
                        }
                </datalist>
                <script>
                    const getProductLines = () => {
                        // Get Combo from API: (mvcActionName, fkName, fkValue, datalistId, pluralEntityName)
                        getDatalistOptionsFromApi("ComboProductLines", "brandId", $('#brandId').val(), "productlines", "Product Lines");
                    }
                </script>
            </div>

            <!-- Product Line -->
            <div class="mb-3">
                <label class="form-label">ProductLineId</label>
                <input type="search" list="productlines" class="form-control" id="productLineId" onchange="getProductSeries()" placeholder="Enter Product Line" />
                <datalist id="productlines"></datalist>
                <script>
                    const getProductSeries = () => {
                        // Get Combo from API: (mvcActionName, fkName, fkValue, datalistId, pluralEntityName)
                        getDatalistOptionsFromApi("ComboProductSeries", "productLineId", $('#productLineId').val(), "productseries", "Product Series");
                    }
                </script>
            </div>

            <!-- Product Series -->
            <div class="mb-3">
                <label asp-for="ProductSeriesId" class="form-label"></label>
                <input asp-for="ProductSeriesId" type="search" list="productseries" class="form-control" placeholder="Enter Product Series" />
                <datalist id="productseries"></datalist>
            </div>

            <!-- Model Name -->
            <div class="mb-3">
                <label asp-for="ModelName" class="form-label"></label>
                <input asp-for="ModelName" class="form-control" />
                <span asp-validation-for="ModelName" class="text-danger"></span>
            </div>

            <!-- Model Year -->
            <div class="mb-3">
                <label asp-for="ModelYear" class="form-label"></label>
                <input asp-for="ModelYear" class="form-control" />
                <span asp-validation-for="ModelYear" class="text-danger"></span>
            </div>

            <!-- Default Firmware Version -->
            <div class="mb-3">
                <label asp-for="DefaultFirmwareVersionId" class="form-label"></label>
                <input asp-for="DefaultFirmwareVersionId" type="search" list="firmwareversions" class="form-control" placeholder="Enter Firmware Version" />
                <datalist id="firmwareversions">
                    @if (ViewBag.ComboFirmwareVersions != null)
                        foreach (var item in ViewBag.ComboFirmwareVersions)
                        {
                            <option value="@item.Value">@item.Text</option>
                        }
                </datalist>
            </div>

            <hr />

            <!-- Save -->
            <div class="mb-3">
                <button class="btn btn-primary"><i class="fa fa-save"></i> Add</button>
            </div>

        </form>
    </div>
</div>

@section Scripts {
    @{
        await Html.RenderPartialAsync("Scripts/_ValidationScriptsPartial");
        await Html.RenderPartialAsync("Scripts/_GetDatalistOptionsAjaxScript");
    }
}
