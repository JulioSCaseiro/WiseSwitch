@model WiseSwitch.ViewModels.Entities.SwitchModel.EditSwitchModelViewModel

@{
    ViewData["Title"] = "Edit switch model";
}

<h2><partial name="_GoBackFaIcon" /> Edit Switch Model</h2>
<hr />

<div class="row">
    <div class="col-md-4">
        <form asp-action="Edit">

            @* ModelState Errors *@
            <div asp-validation-summary="ModelOnly" class="text-danger"></div>

            @* Id for Edit *@
            <input type="hidden" asp-for="Id" />

            <!-- Brand -->
            <div class="mb-3">
                <label asp-for="BrandId" class="form-label"></label>
                <select asp-for="BrandId" asp-items="ViewBag.ComboBrands" class="form-select" onchange="brandSelected()"></select>
                <span asp-validation-for="BrandId" class="text-danger"></span>
            </div>

            <!-- Get Combo Product Lines when Brand is selected. -->
            <script>
                const brandSelected = () => {
                    const elmSelectProductSeries = $('#ProductSeriesId');
                    elmSelectProductSeries.empty();
                    elmSelectProductSeries.append('<option disabled selected value="0">Select a Product Line</option>');

                    getProductLines();
                }

                const getProductLines = (selectedValue) => {
                    // Get Combo from API: (selectElementId, friendlyEntityName, pluralFriendlyEntityName, mvcActionName, fkName, fkValue, selectedValue)
                    getSelectOptionsFromApi("ProductLineId", "Product Line", "Product Lines", "ComboProductLinesOfBrand", "BrandId", $('#BrandId').val(), selectedValue);
                }
            </script>

            <!-- Product Line -->
            <div class="mb-3">
                <label asp-for="ProductLineId" class="form-label"></label>
                <select asp-for="ProductLineId" class="form-select" onchange="getProductSeries()"></select>
                <span asp-validation-for="ProductLineId" class="text-danger"></span>
            </div>

            <!-- Get Combo Product Series when ProductLine is selected. -->
            <script>
                const getProductSeries = (selectedValue) => {
                    // Get Combo from API: (selectElementId, friendlyEntityName, pluralFriendlyEntityName, mvcActionName, fkName, fkValue, selectedValue)
                    getSelectOptionsFromApi("ProductSeriesId", "Product Series", "Product Series", "ComboProductSeriesOfProductLine", "ProductLineId", $('#ProductLineId').val(), selectedValue);
                }
            </script>

            <!-- Product Series -->
            <div class="mb-3">
                <label asp-for="ProductSeriesId" class="form-label"></label>
                <select asp-for="ProductSeriesId" class="form-select"></select>
                <span asp-validation-for="ProductSeriesId" class="text-danger"></span>
            </div>

            <!-- Model Name -->
            <div class="mb-3">
                <label asp-for="ModelName" class="form-label"></label>
                <input asp-for="ModelName" class="form-control" />
                <span asp-validation-for="ModelName" class="text-danger"></span>
            </div>

            <!-- Model Year -->
            <div class="mb-3">
                <label asp-for="ModelYear" class="form-label"></label>
                <input asp-for="ModelYear" class="form-control" />
                <span asp-validation-for="ModelYear" class="text-danger"></span>
            </div>

            <!-- Default Firmware Version -->
            <div class="mb-3">
                <label asp-for="DefaultFirmwareVersionId" class="form-label"></label>
                <select asp-for="DefaultFirmwareVersionId" asp-items="ViewBag.ComboFirmwareVersions" class="form-select"></select>
                <span asp-validation-for="DefaultFirmwareVersionId" class="text-danger"></span>
            </div>

            <hr />

            <!-- Save -->
            <div class="mb-3">
                <button class="btn btn-primary"><i class="fa fa-save"></i> Save</button>
            </div>

        </form>
    </div>
</div>

@section Scripts {
    @{
        await Html.RenderPartialAsync("Scripts/_ValidationScriptsPartial");
        await Html.RenderPartialAsync("Scripts/_GetSelectOptionsAjaxScript");

        <!-- Get sibling Combo Product Lines and Combo Product Series on Edit. -->
        <script>
            $(function () {
                getProductLines(@Model.ProductLineId);
                getSelectOptionsFromApi("ProductSeriesId", "Product Series", "Product Series", "ComboProductSeriesOfProductLine", "ProductLineId", @Model.ProductLineId, @Model.ProductSeriesId);
            })
        </script>
    }
}
